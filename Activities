
app/src/main/java/com/example/aneeq/myflashcard/MainActivity


package com.example.aneeq.myflashcard;

import android.app.Dialog;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.job.JobInfo;
import android.app.job.JobScheduler;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.design.widget.FloatingActionButton;
import android.support.v4.app.NotificationCompat;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;
import com.example.aneeq.myflashcard.activities.SettingsActivity;
import com.example.aneeq.myflashcard.adapters.CardRecyclerViewAdapter;
import com.example.aneeq.myflashcard.models.Card;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;
import butterknife.ButterKnife;
import butterknife.InjectView;

public class MainActivity extends AppCompatActivity{


    File file;
    JobScheduler mJobScheduler;


    FloatingActionButton floatingActionButton;

    List<Card> cards;
    Context context;
    @InjectView(R.id.rvCards)
    RecyclerView rvCards;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ButterKnife.inject(this);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        initializeData();

        LinearLayoutManager llm = new LinearLayoutManager(this.getContext());
        rvCards.setHasFixedSize(true);
        rvCards.setLayoutManager(llm);

        CardRecyclerViewAdapter adapter = new CardRecyclerViewAdapter(this.getContext(), cards);
        rvCards.setAdapter(adapter);


        mJobScheduler = (JobScheduler)
                getSystemService(Context.JOB_SCHEDULER_SERVICE);

        JobInfo.Builder mbuilder = new JobInfo.Builder( 1, new ComponentName(getPackageName(),
                JobSchedulerService.class.getName()));

        mbuilder.setPeriodic(3000);

        if (mJobScheduler.schedule(mbuilder.build()) <= 0) {
            // If something goes wrong
        }






        floatingActionButton = (FloatingActionButton)findViewById(R.id.floating_action_btn);
        floatingActionButton.setOnClickListener(onAddingListener());




        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);

        StringBuilder builder = new StringBuilder();

        builder.append("\n" + "Disable Cards:\t" + sharedPreferences.getBoolean("disable_cards", false));
        builder.append("\n" + "Notification Setting:\t" + sharedPreferences.getBoolean("notification_setting", false));


    }


    private View.OnClickListener onAddingListener() {
        return new View.OnClickListener(){

            @Override
            public void onClick(View v) {

                final Dialog dialog = new Dialog(MainActivity.this);
                dialog.setContentView(R.layout.add_dialog);
                dialog.setTitle("Add a new Card");



                EditText question = (EditText) dialog.findViewById(R.id.edit_question);
                EditText answer = (EditText) dialog.findViewById(R.id.edit_answer);
                View btnAdd = dialog.findViewById(R.id.btn_add);
                View btnCancel = dialog.findViewById(R.id.btn_cancel);

                //set handling event for 2 buttons
                btnAdd.setOnClickListener(onConfirmListener(question, answer, dialog));
                btnCancel.setOnClickListener(onCancelListener(dialog));

                dialog.show();


            }
        };
    }

    private View.OnClickListener onCancelListener(final Dialog dialog) {

        return new View.OnClickListener() {

            @Override
            public void onClick(View v) {

                dialog.dismiss();
            }
        };
    }

    private View.OnClickListener onConfirmListener(final EditText question, final EditText answer, Dialog dialog) {

        return new View.OnClickListener() {

            @Override
            public void onClick(View v) {

                Card card = new Card(question.getText().toString().trim(), answer.getText().toString().trim());
                cards.add(card);
            }
        };

    }


    private void initializeData() {

        cards = new ArrayList<>();
        cards.add(new Card("What is an Activity?", "   An activity represents a single screen with a user interface just like window or frame of Java"));
        cards.add(new Card("What is an Intent?", "An intent is an abstract description of an operation to be performed"));
        cards.add(new Card("What is a Service?", "A service is a component that runs in the background to perform longrunning operations without needing to interact with the user and it works even   if application is destroyed"));
        cards.add(new Card("What is LinearLayout?", "LinearLayout is a view group that aligns all children in a single direction, vertically or horizontally"));
        cards.add(new Card("What is a Widget?", "A widget is a simple application extension that is often part of a larger application already installed on the device"));


    }

    private Context getContext() {
        return context;
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }



    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    public void loadSettings(MenuItem item) {

        Intent intent = new Intent(MainActivity.this, SettingsActivity.class);
        startActivity(intent);

    }


    private void showNotification() {
        NotificationCompat.Builder builder = new NotificationCompat.Builder(MainActivity.this)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentTitle(getString(R.string.app_name))
                .setContentText("New Notification");


        Intent notificationIntent = new Intent(this, MainActivity.class);
        PendingIntent   contentIntent = PendingIntent.getActivity(this, 0, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);
        builder.setContentIntent(contentIntent);

        NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        manager.notify(0, builder.build());
    }


    String filename = "myfile";
    String string = "Cards";
    FileOutputStream outputStream;

}








app/src/main/java/com/example/aneeq/myflashcard/activities/AnswerActivity

package com.example.aneeq.myflashcard.activities

import android.os.Bundle;
        import android.support.v7.app.AppCompatActivity;
        import android.support.v7.widget.Toolbar;
        import android.widget.TextView;

        import com.example.aneeq.myflashcard.R;
        import com.example.aneeq.myflashcard.models.Card;

        import butterknife.ButterKnife;
        import butterknife.InjectView;

public class AnswerActivity extends AppCompatActivity {

    Card card;
    @InjectView(R.id.tvAnswer)
    TextView tvAnswer;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_answer);
        ButterKnife.inject(this);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        getSupportActionBar().setDisplayHomeAsUpEnabled(true);


        Bundle extras = getIntent().getExtras();
        if (extras != null) {
            card = (Card) extras.getSerializable("CARD");
            this.setTitle(card.getQuestion());
            tvAnswer.setText(card.getAnswer());
        }


    }
}






app/src/main/java/com/example/aneeq/myflashcard/activities/AppCompatPreferenceActivity

**
 * A {@link android.preference.PreferenceActivity} which implements and proxies the necessary calls
 * to be used with AppCompat.
 */
public abstract class AppCompatPreferenceActivity extends PreferenceActivity {

    private AppCompatDelegate mDelegate;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        getDelegate().installViewFactory();
        getDelegate().onCreate(savedInstanceState);
        super.onCreate(savedInstanceState);
    }

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        getDelegate().onPostCreate(savedInstanceState);
    }

    public ActionBar getSupportActionBar() {
        return getDelegate().getSupportActionBar();
    }

    public void setSupportActionBar(@Nullable Toolbar toolbar) {
        getDelegate().setSupportActionBar(toolbar);
    }

    @Override
    public MenuInflater getMenuInflater() {
        return getDelegate().getMenuInflater();
    }

    @Override
    public void setContentView(@LayoutRes int layoutResID) {
        getDelegate().setContentView(layoutResID);
    }

    @Override
    public void setContentView(View view) {
        getDelegate().setContentView(view);
    }

    @Override
    public void setContentView(View view, ViewGroup.LayoutParams params) {
        getDelegate().setContentView(view, params);
    }

    @Override
    public void addContentView(View view, ViewGroup.LayoutParams params) {
        getDelegate().addContentView(view, params);
    }

    @Override
    protected void onPostResume() {
        super.onPostResume();
        getDelegate().onPostResume();
    }

    @Override
    protected void onTitleChanged(CharSequence title, int color) {
        super.onTitleChanged(title, color);
        getDelegate().setTitle(title);
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
        getDelegate().onConfigurationChanged(newConfig);
    }

    @Override
    protected void onStop() {
        super.onStop();
        getDelegate().onStop();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        getDelegate().onDestroy();
    }

    public void invalidateOptionsMenu() {
        getDelegate().invalidateOptionsMenu();
    }

    private AppCompatDelegate getDelegate() {
        if (mDelegate == null) {
            mDelegate = AppCompatDelegate.create(this, null);
        }
        return mDelegate;
    }
}






app/src/main/java/com/example/aneeq/myflashcard/activities/SettingsActivity

package com.example.aneeq.myflashcard.activities;


import android.annotation.TargetApi;
import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.media.Ringtone;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.preference.ListPreference;
import android.preference.Preference;
import android.preference.PreferenceActivity;
import android.support.v7.app.ActionBar;
import android.preference.PreferenceFragment;
import android.preference.PreferenceManager;
import android.preference.RingtonePreference;
import android.text.TextUtils;
import android.view.MenuItem;
import android.support.v4.app.NavUtils;

import com.example.aneeq.myflashcard.R;

import java.util.List;

public class SettingsActivity extends AppCompatPreferenceActivity {
    /**
     * A preference value change listener that updates the preference's summary
     * to reflect its new value.
     */


    private static boolean isLargeTablet(Context context) {

        return (context.getResources().getConfiguration().screenLayout

                & Configuration.SCREENLAYOUT_SIZE_MASK) >= Configuration.SCREENLAYOUT_SIZE_LARGE;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setupActionBar();
    }


    private void setupActionBar() {
        ActionBar actionBar = getSupportActionBar();
        if (actionBar != null) {
            // Show the Up button in the action bar.
            actionBar.setDisplayHomeAsUpEnabled(true);
        }
    }

    @Override
    public boolean onOptionsItemSelected( MenuItem item) {
        int id = item.getItemId();
        if (id == android.R.id.home) {
            onBackPressed();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public boolean onIsMultiPane() {

        return isLargeTablet(this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
    public void onBuildHeaders(List<Header> target) {
        loadHeadersFromResource(R.xml.pref_headers, target);
    }

    /**
     * This method stops fragment injection in malicious applications.
     * Make sure to deny any unknown fragments here.
     */
    protected boolean isValidFragment(String fragmentName) {
        return PreferenceFragment.class.getName().equals(fragmentName)
                || GeneralPreferenceFragment.class.getName().equals(fragmentName);
    }

    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
    public static class GeneralPreferenceFragment extends PreferenceFragment {
        @Override
        public void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            int preferenceFile_toLoad = -1;
            String settings = getArguments().getString("settings");
            if ("prefs_general".equalsIgnoreCase(settings)) {
                preferenceFile_toLoad = R.xml.pref_general;

            }else if ("prefs_notification".equalsIgnoreCase(settings)){
                preferenceFile_toLoad = R.xml.pref_notification;
            }

            addPreferencesFromResource(preferenceFile_toLoad);
        }
    }
}






