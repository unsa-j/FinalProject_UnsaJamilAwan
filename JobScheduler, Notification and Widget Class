app/src/main/java/com/example/aneeq/myflashcard/JobSchedulerService


package com.example.aneeq.myflashcard;

import android.app.job.JobParameters;
import android.app.job.JobService;
import android.os.Handler;
import android.os.Message;
import android.widget.Toast;

/**
 * Created by Aneeq on 6/20/2017.
 */

public class JobSchedulerService extends JobService {

    private Handler mJobHandler = new Handler(new Handler.Callback() {

        @Override
        public boolean handleMessage(Message msg) {
            Toast.makeText(getApplicationContext(), " JobService task running", Toast.LENGTH_SHORT)
                    .show();
            jobFinished ( (JobParameters) msg.obj, false);
            return true;
        }
    } );
    @Override
    public boolean onStartJob(JobParameters params) {

        mJobHandler.sendMessage( Message.obtain( mJobHandler, 1, params ) );
        return true;

    }

    @Override
    public boolean onStopJob(JobParameters params) {
        mJobHandler.removeMessages( 1 );
        return false;
    }
}




app/src/main/java/com/example/aneeq/myflashcard/NotificationView

package com.example.aneeq.myflashcard;

import android.app.Activity;
import android.os.Bundle;

/**
 * Created by Aneeq on 6/20/2017.
 */

public class NotificationView extends Activity {

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.notification);
    }
}


app/src/main/java/com/example/aneeq/myflashcard/QuestionAppWidgetProvider


package com.example.aneeq.myflashcard;

import android.app.PendingIntent;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.Context;
import android.content.Intent;
import android.widget.RemoteViews;

import java.util.ArrayList;
import java.util.Random;

/**
 * Created by Aneeq on 6/19/2017.
 */

public class QuestionAppWidgetProvider extends AppWidgetProvider  {

    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
        final int N = appWidgetIds.length;

        for (int i=0; i<N; i++){
            int appWidgetId = appWidgetIds[i];

            RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.widget_layout);
            views.setTextViewText(R.id.tvQuestion, getRandomQuestion());
            views.setTextViewText(R.id.tvAnswer, getRandomAnswer());



            Intent intent = new Intent(context, QuestionAppWidgetProvider.class);
            intent.setAction(AppWidgetManager.ACTION_APPWIDGET_UPDATE);
            intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, appWidgetIds);

            PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
            views.setOnClickPendingIntent(R.id.btn_nxtquestion, pendingIntent);
            views.setOnClickPendingIntent(R.id.btn_seeanswer, pendingIntent);

            appWidgetManager.updateAppWidget(appWidgetId, views);
        }


    }



    private String getRandomQuestion() {
        ArrayList<String> questions = new ArrayList<>();
        questions.add("Q: What is an Activity?");
        questions.add("Q: What is an Intent?");
        questions.add("Q: What is a Service?");
        questions.add("Q: What is LinearLayout?");
        questions.add("Q: What is Widget?");

        Random randomValue = new Random();
        int randomIndex = randomValue.nextInt(questions.size());

        return questions.get(randomIndex);
    }


    private CharSequence getRandomAnswer() {
        ArrayList<String> answers = new ArrayList<>();
        answers.add("A: An activity represents a single screen with a user interface just like window or frame of Java");
        answers.add("A: An intent is an abstract description of an operation to be performed");
        answers.add("A: A service is a component that runs in the background to perform longrunning operations without needing to interact with the user and it works even   if application is destroyed");
        answers.add("A: LinearLayout is a view group that aligns all children in a single direction, vertically or horizontally");
        answers.add("A: A widget is a simple application extension that is often part of a larger application already installed on the device");



        Random randomValue = new Random();
        int randomIndex = randomValue.nextInt(answers.size());

        return answers.get(randomIndex);

    }


    
    
}

